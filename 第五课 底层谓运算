// SPDX-License-Identifier: GPL-3.0
//第五课 底层畏运算；
pragma solidity ^0.8.0;
//uint8；
//& 与 0与0 0与1 为0；
//｜ 或 0与1=1 0与0=0；
//～取反 0=1 1=0；
// ^ 亦或操作 相等=0，不等=1；
//<<左移一位；不够位显示0；
//>>右移一位；不够位显示0；
contract count{
    uint8 a = 3;
    uint8 b = 4;
    function weiyu() view public returns(uint){
        return a & b;
    }
    function weifan()view public returns(uint){
        return ~a;
    }
    function huo()view public returns(uint){
        return a | b;
    }
    function yu()view public returns(uint){
    return a ^ b;
    }
    function zuoyi()view public returns(uint){
    return a << 1;
    }
    function youyi()view public returns(uint){
    return a >> 1;
    }
// SPDX-License-Identifier: GPL-3.0
//第六课 危险的整数溢出及异常处理；
//限制内容的大小，节约资源，在合适的使用用合适的类型，比如uint8；
    function flow() view public returns(uint){
        uint8 mm = 255;
        mm++;//mm=mm+1
        return mm;
    }
    function flow2() view public returns(uint){
        uint8 mm = 0;
        mm--;//mm=mm-1
        return mm;
    }

}
//0益事件 向上溢出 和 向下溢出都是很危险的

//第七课 整型字面量
    function intergerTest() returns(uint){
    uint num = (2**800+1)-2**800;
    return num;
    }
    //function intergerTest2() returns(uint){
    //uint num = 2/4*1000;
    //return num;
    //solidity,暂时还不支持除法？
    function intergerTest3() returns(uint){
    uint num = 1111111111-222;
    return num;
    }
